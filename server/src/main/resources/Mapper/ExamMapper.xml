<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.edu.mapper.ExamMapper">
    <select id="pageQuery" resultType="com.edu.entity.Exam" parameterType="com.edu.dto.ExamPageQueryDTO">
        select * from exam where course_id=#{courseId}
    </select>

    <delete id="deleteByCourseId">
        delete from exam where course_id=#{courseId}
    </delete>
    <delete id="deleteByChapterId">
       WITH  b as (select exam_id from chapter_exam where chapter_id=#{chapterId}) delete from exam where id = b.exam_id

    </delete>

    <select id="getById" resultType="com.edu.entity.Exam">
        select * from user_exam_record where id=#{examId}
    </select>
    <select id="getRecord" resultType="com.edu.entity.UserExamRecord">
        select * from user_exam_record where user_id=#{userId} and exam_id=#{examId}
    </select>

    <insert id="CreateRecord" parameterType="com.edu.entity.UserExamRecord">
        insert into user_exam_record <set>
        user_id = #{userId},
        exam_id = #{examId},
        course_id=#{courseId},
        status = #{status},
        attempt_count=#{attemptCount},
        startTime=#{startTime},
        created_at=#{startTime},
        updated_at=#{startTime}
    </set>
    </insert>

    <update id="tryAgain" parameterType="com.edu.entity.UserExamRecord">
        update user_exam_record <set>
        status=#{status},
        attempt_count=#{attemptCount},
        start_time=#{startTime}

    </set>
        where user_id=#{userId} and exam_id=#{examId}
    </update>

    <update id="updateRecord">
        update user_exam_record
            <set>
                <if test="score!=null">
                    score=#{score},
                </if>
                <if test="isPassed!=null">
                    is_passed=#{isPassed},
                </if>
                <if test="attemptCount!=null">
                    attempt_count=#{attemptCount},
                </if>
                <if test="status!=null">
                    status=#{status},
                </if>
                <if test="submitTime!=null">
                    submit_time=#{submitTime},
                </if>
                <if test="answers!=null">
                    answers=#{answers},
                </if>
                <if test="review!=null">
                    review=#{review},
                </if>
                updated_at=#{updatedAt}
            </set>
        where user_id=#{userId} and exam_id=#{examId}
    </update>

    <select id="getAnswer" resultType="com.edu.entity.QuestionAnswer">
        select * from question_answer where question_id=#{questionId} and user_id=#{userId}
    </select>

    <update id="updateAns">
        update question_answer <set>
        updated_at=#{updatedAt},
        content=#{content}
    </set>
        where user_id=#{userId} and exam_id=#{examId}
    </update>

    <insert id="creatAns">
        insert into question_answer (title,content, user_id, created_at, updated_at, exam_id, question_id,sortOrder) VALUES
            (#{title},#{content},#{userId},#{createdAt},#{updatedAt},#{examId},#{questionId},#{sortOrder})
    </insert>

    <select id="getUserAnswers" resultType="com.edu.entity.QuestionAnswer">
        select * from question_answer
    </select>

    <select id="getSortOrder" resultType="long">
        select sort_order from exam_question where exam_id=#{examId} and question_id=#{questionId}
    </select>

    <select id="getQuestion" resultType="com.edu.entity.Question">
        select * from question join exam_question on question.id = exam_question.question_id where sort_order=#{sortOrder} and exam_id=#{examId}
    </select>

    <update id="updateExam" parameterType="com.edu.entity.Exam">
        update exam <set>
        <if test="title!=null">
            title=#{title},
        </if>
        <if test="description!=null">
            description=#{description},
        </if>
        <if test="duration!=null">
            duration=#{duration},
        </if>
        <if test="passingScore!=null">
            passing_score=#{passingScore},
        </if>
        <if test="status!=null">
            status=#{status},
        </if>
        <if test="maxAttempts!=null">
            max_attempts=#{maxAttempts}
        </if>
    </set>
    </update>

    <delete id="delete">
        delete from exam where id=#{examId}
    </delete>

    <insert id="createExam" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        insert into exam (course_id, title, description, duration,passing_score,
                          is_final_exam,coverage_type,status,max_attempts,created_at,
                          updated_at) VALUES
            (#{courseId},#{title},#{description},#{duration},#{passingScore},#{isFinalExam},
             #{coverageType},#{status},#{maxAttempts},#{createdAt},#{updatedAt})
    </insert>

    <insert id="createQuestion" useGeneratedKeys="true" keyProperty="param1.id" keyColumn="id">
        insert into question (question_type, content, options, answer,
                              difficulty, score, creator_id, created_at, updated_at) VALUES
            (#{param1.questionType},#{param1.content},#{param1.options},#{param1.answer},#{param1.difficulty}
            ,#{param1.score},#{param1.creatorId},#{param1.createdAt},#{param1.updatedAt})

    </insert>

    <insert id="createQuestionLink">
        insert into exam_question (exam_id, question_id, sort_order, score)
        VALUES (#{param2},#{param1},#{param3},#{param4})
    </insert>

    <update id="reSortQuestion">
        update exam_question<set>
        sort_order = sort_order - 1 on sort_order > {sortOrder}
    </set> where exam_id=#{examId}
    </update>

    <delete id="deleteQuestion">
        delete from exam_question where exam_id=#{examId} and sort_order = #{sortOrder};


    </delete>

    <update id="updateQuestion">

    </update>

    <update id="updateQuestionAnswer">
        update question_answer <set>
        score = #{score}
    </set>
        where user_id=#{userId} and exam_id=#{examId} and question_id = #{questionId}
    </update>

    <select id="recordPageQuery" resultType="com.edu.entity.UserExamRecord">
        select * from user_exam_record where exam_id=#{examId}
    </select>

    <select id="getRecordById" resultType="com.edu.entity.UserExamRecord">
        select * from user_exam_record where id=#{recordId}
    </select>

    <select id="getRecordScore" resultType="java.math.BigDecimal">
        select sum(score) from question_answer where user_id=(select user_id from user_exam_record where id=#{recordId}) and exam_id=(select exam_id from user_exam_record where id=#{recordId})
    </select>
</mapper>